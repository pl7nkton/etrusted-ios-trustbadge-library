// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Trustbadge
import Combine
import Foundation
import Swift
import SwiftUI
@_exported import Trustbadge
import UIKit
import _Concurrency
@_inheritsConvenienceInitializers @available(iOS 13.0.0, *)
@objc public class TrustbadgeViewWrapper : ObjectiveC.NSObject {
  @objc public static func createTrustbadgeView(tsid: Swift.String) -> UIKit.UIViewController
  @objc override dynamic public init()
  @objc deinit
}
public enum TSLogSeverity {
  case info, warning, error
  public static func == (a: Trustbadge.TSLogSeverity, b: Trustbadge.TSLogSeverity) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class TSConsoleLogger {
  public static func log(messege: Swift.String, severity: Trustbadge.TSLogSeverity, file: Swift.String = #file, method: Swift.String = #function)
  @objc deinit
}
@_Concurrency.MainActor(unsafe) public struct TrustbadgeView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(tsid: Swift.String)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s10Trustbadge0A4ViewV4bodyQrvp", 0) __
}
extension Trustbadge.TSLogSeverity : Swift.Equatable {}
extension Trustbadge.TSLogSeverity : Swift.Hashable {}
